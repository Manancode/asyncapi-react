(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[931],{34361:function(){},19731:function(){},77664:function(){},96553:function(){},8813:function(n,e,t){Promise.resolve().then(t.bind(t,47336))},47336:function(n,e,t){"use strict";t.r(e),t.d(e,{default:function(){return H}});var i=t(20984);t(39983);var s=t(30208),r=t(6250),o=t(76858);let a=o.ZP.div.withConfig({componentId:"sc-610da6d3-0"})([""]),c=o.ZP.nav.withConfig({componentId:"sc-610da6d3-1"})(["display:flex;flex-direction:row;flex-wrap:nowrap;width:100%;line-height:48px;padding:0;background-color:#263238;border-bottom:#607d8b 2px solid;"]),p=o.ZP.header.withConfig({componentId:"sc-610da6d3-2"})(["margin-left:16px;display:inline-block;"]),l=o.ZP.h1.withConfig({componentId:"sc-610da6d3-3"})(["color:#fff;margin:0;font-weight:bold;font-size:20px;line-height:48px;"]),d=o.ZP.img.withConfig({componentId:"sc-610da6d3-4"})(["height:34px;max-height:34px;margin-top:7px;float:left;"]),h=o.ZP.span.withConfig({componentId:"sc-610da6d3-5"})(["font-weight:bold;margin-left:12px;"]),m=o.ZP.span.withConfig({componentId:"sc-610da6d3-6"})(["font-style:italic;margin-left:6px;"]);o.ZP.a.withConfig({componentId:"sc-610da6d3-7"})([""]);let u=o.ZP.div.withConfig({componentId:"sc-610da6d3-8"})(["background:rgb(38,50,56);"]),g=o.ZP.div.withConfig({componentId:"sc-610da6d3-9"})(["height:calc(100vh - 50px);min-height:calc(100vh - 50px);overflow:auto;> .asyncapi{padding:24px;}> .asyncapi__error{margin:24px;}"]),f=o.ZP.div.withConfig({componentId:"sc-610da6d3-10"})(["box-sizing:border-box;width:100%;height:100%;margin:0;font-family:sans-serif;font-weight:normal;"]),y=o.ZP.div.withConfig({componentId:"sc-610da6d3-11"})(["> .react-codemirror2 > .CodeMirror{height:100%;min-height:100%;}"]),b=o.ZP.ul.withConfig({componentId:"sc-610da6d3-12"})(["list-style:none;padding:0;margin:0 5px 15px;display:flex;justify-items:flex-start;flex-flow:row nowrap;"]),x=o.ZP.li.withConfig({componentId:"sc-610da6d3-13"})(["margin:0 0 0 auto;position:relative;display:inline-block;padding:19px 15px;"]),w=o.ZP.div.withConfig({componentId:"sc-610da6d3-14"})(["font-family:sans-serif;font-weight:700;color:#f77669;transition:0.2s all linear;opacity:",";animation-name:spin;animation-duration:1.5s;animation-iteration-count:infinite;animation-timing-function:linear;@keyframes spin{from{transform:rotate(0deg);}to{transform:rotate(360deg);}}"],n=>n.$show?"1":"0"),v=o.ZP.div.withConfig({componentId:"sc-610da6d3-15"})(["margin:0;padding:0 20px;font-size:14px;color:#515559;line-height:1.57;overflow:auto;height:calc(100vh - 117px);min-height:calc(100vh - 117px);"]),k=o.ZP.li.withConfig({componentId:"sc-610da6d3-16"})([""]),I=o.ZP.div.withConfig({componentId:"sc-610da6d3-17"})(["display:flex;align-items:center;margin:0 15px;padding:19px 0 15px;border:none;position:relative;color:",";font-size:14px;outline:none;transition:0.2s color linear;text-transform:uppercase;cursor:pointer;&:first-letter{text-transform:uppercase;}&:after{content:'';bottom:0;display:block;position:absolute;height:",";width:100%;border-radius:2px;background-color:#c3e88d;}&:hover{color:#c3e88d;&:after{content:'';bottom:0;display:block;position:absolute;height:3px;width:100%;border-radius:2px;background-color:#c3e88d;}}"],n=>n.$active?"#c3e88d":"#f77669",n=>n.$active?"3px":"0px"),C=o.ZP.div.withConfig({componentId:"sc-610da6d3-18"})(["display:flex;box-sizing:border-box;position:relative;margin-bottom:20px;"]),j=o.ZP.input.withConfig({componentId:"sc-610da6d3-19"})(["width:100%;padding:6px 12px;box-sizing:border-box;outline:none;background:inherit;border:3px solid #f77669;color:#f77669;border-radius:6px;transition:0.2s border,color linear;font-size:14px;&:hover{color:#c3e88d;border-color:#c3e88d;}"]),A=o.ZP.button.withConfig({componentId:"sc-610da6d3-20"})(["width:auto;padding:6px 12px;display:inline-block;background:inherit;border:3px solid #f77669;color:#f77669;border-radius:6px;font-size:14px;margin-left:12px;white-space:nowrap;transition:0.2s border,color linear;cursor:pointer;&:hover{color:#c3e88d;border-color:#c3e88d;}"]);var P=()=>(0,i.jsx)(c,{children:(0,i.jsx)(p,{children:(0,i.jsxs)(l,{children:[(0,i.jsx)(d,{src:"https://avatars0.githubusercontent.com/u/16401334?v=4&s=200",alt:"AsyncAPI logo"}),(0,i.jsx)(h,{children:"AsyncAPI React"}),(0,i.jsx)(m,{children:"editor"})]})})}),T=t(83020),S=t(50197),O=t(74758);class D extends s.Component{componentDidUpdate(n){let{externalResource:e}=this.props;e&&n.externalResource!==e&&this.setState({code:e})}render(){let{state:{code:n}}=this;return(0,i.jsx)(y,{children:(0,i.jsx)(T.ZP,{value:n,basicSetup:{lineNumbers:!0,tabSize:2},theme:O.GX,extensions:[(0,S.r)()],onChange:n=>{this.props.parentCallback(n)}})})}constructor(...n){super(...n),this.state={code:this.props.code}}}let $=n=>{if(!n)return{};try{return JSON.parse(n)}catch(n){return{}}},q=async n=>fetch(n,{method:"GET"}).then(R);function R(n){return n.text().then(n=>n)}function Z(n,e,t,i){let s;return function(){for(var r=arguments.length,o=Array(r),a=0;a<r;a++)o[a]=arguments[a];s&&clearTimeout(s),t(),s=setTimeout(()=>{s=void 0,n(...o),i()},e||1e3)}}class E extends s.Component{render(){let{link:n}=this.state;return(0,i.jsxs)(C,{children:[(0,i.jsx)(j,{value:n,placeholder:"Link for external schema",onChange:n=>this.setState({link:n.target.value})}),(0,i.jsx)(A,{type:"button",onClick:this.fetchSchemaFromExternalResources,children:"Fetch schema"})]})}constructor(...n){super(...n),this.state={link:""},this.fetchSchemaFromExternalResources=async()=>{try{new URL(this.state.link)}catch(n){return}let{props:{parentCallback:n},state:{link:e}}=this;n(await q(e))}}}var F=t(61210),W=n=>(0,i.jsx)(i.Fragment,{children:(0,i.jsx)(F.Z,{style:{width:"100%",height:"calc(100vh - 50px)",minHeight:"calc(100vh - 50px)",display:"flex",background:"#f3f4f5"},gutter:()=>{let n=document.createElement("div");return n.onmouseover=()=>n.style.cursor="ew-resize",n},gutterStyle:()=>({backgroundColor:"gray",width:"7px"}),minSize:250,children:n.children})});class _ extends s.Component{render(){let{additionalHeaderContent:n}=this.props,e=[].concat(...this.props.children).filter(n=>null!=n);return(0,i.jsxs)(f,{children:[(0,i.jsxs)(b,{children:[this.renderHeader(e),(0,i.jsx)(x,{children:n})]}),(0,i.jsx)(v,{children:this.renderActiveTab(e)})]})}constructor(n){super(n),this.handleTabClick=n=>{this.setState({activeTabIndex:n})},this.renderHeader=n=>s.Children.map(n,(n,e)=>s.cloneElement(n,{title:n.props.title,parentCallback:this.handleTabClick,tabIndex:e,isActive:e===this.state.activeTabIndex})),this.renderActiveTab=n=>n[this.state.activeTabIndex]?n[this.state.activeTabIndex].props.children:null,this.state={activeTabIndex:this.props.defaultActiveTabIndex?this.props.defaultActiveTabIndex:0}}}class L extends s.Component{render(){let{title:n,tabIndex:e,isActive:t,parentCallback:s}=this.props;return(0,i.jsx)(k,{children:(0,i.jsx)(I,{onClick:n=>{n.preventDefault(),s&&e&&s(e)},$active:t,children:n})},e)}}let z='{\n  "show": {\n    "sidebar": false,\n    "info": true,\n    "operations": true,\n    "servers": true,\n    "messages": true,\n    "schemas": true,\n    "errors": true\n  },\n  "expand":{\n    "messageExamples": false\n  },\n  "sidebar": {\n    "showServers": "byDefault",\n    "showOperations": "byDefault"\n  }\n}';class K extends s.Component{render(){let{schema:n,config:e,schemaFromExternalResource:t}=this.state,s=$(e||z);return(0,i.jsxs)(a,{children:[(0,i.jsx)(P,{}),(0,i.jsxs)(W,{children:[(0,i.jsx)(u,{children:(0,i.jsxs)(_,{additionalHeaderContent:(0,i.jsx)(w,{$show:this.state.refreshing,children:"î€Š"}),children:[(0,i.jsx)(L,{title:"Schema",children:(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(E,{parentCallback:this.updateSchemaFromExternalResource}),(0,i.jsx)(D,{code:n,externalResource:t,parentCallback:this.updateSchemaFn},"Schema")]})},"Schema"),(0,i.jsx)(L,{title:"Configuration",children:(0,i.jsx)(D,{code:e,parentCallback:this.updateConfigFn},"Configuration")},"Configuration")]})}),(0,i.jsx)(g,{children:(0,i.jsx)(r.ZP,{schema:n,config:s})})]})]})}constructor(n){super(n),this.state={schema:"asyncapi: '2.6.0'\nid: 'urn:com:smartylighting:streetlights:server'\ninfo:\n  title: Streetlights API\n  version: '1.0.0'\n  description: |\n    The Smartylighting Streetlights API allows you to remotely manage the city lights.\n\n    ### Check out its awesome features:\n\n    * Turn a specific streetlight on/off \uD83C\uDF03\n    * Dim a specific streetlight \uD83D\uDE0E\n    * Receive real-time information about environmental lighting conditions \uD83D\uDCC8\n\n  termsOfService: http://asyncapi.org/terms/\n  contact:\n    name: API Support\n    url: http://www.asyncapi.org/support\n    email: support@asyncapi.org\n  license:\n    name: Apache 2.0\n    url: http://www.apache.org/licenses/LICENSE-2.0.html\ntags:\n  - name: root-tag1\n    externalDocs:\n      description: External docs description 1\n      url: https://www.asyncapi.com/\n  - name: root-tag2\n    description: Description 2\n    externalDocs:\n      url: \"https://www.asyncapi.com/\"\n  - name: root-tag3\n  - name: root-tag4\n    description: Description 4\n  - name: root-tag5\n    externalDocs:\n      url: \"https://www.asyncapi.com/\"\nexternalDocs:\n  description: Find more info here\n  url: https://example.com\ndefaultContentType: application/json\n\nservers:\n  production:\n    url: api.streetlights.smartylighting.com:{port}\n    protocol: mqtt\n    description: |\n      Private server that requires authorization.\n      Once the socket is open you can subscribe to private-data channels by sending an authenticated subscribe request message.\n\n      The API client must request an authentication \"token\" via the following REST API endpoint \"GetWebSocketsToken\" to connect to WebSockets Private endpoints. For more details read https://support.kraken.com/hc/en-us/articles/360034437672-How-to-retrieve-a-WebSocket-authentication-token-Example-code-in-Python-3\n\n      The resulting token must be provided in the \"token\" field of any new private WebSocket feed subscription: \n      ```json\n      {\n        \"event\": \"subscribe\",\n        \"subscription\":\n        {\n          \"name\": \"ownTrades\",\n          \"token\": \"WW91ciBhdXRoZW50aWNhdGlvbiB0b2tlbiBnb2VzIGhlcmUu\"\n        }\n      }\n      ```\n\n      ```elixir\n      defmodule Hello do\n        def world do\n          IO.puts(\"hello\")\n        end\n      end\n      ```\n    variables:\n      port:\n        description: Secure connection (TLS) is available through port 8883.\n        default: '1883'\n        enum:\n          - '1883'\n          - '8883'\n    tags:\n      - name: 'env:production'\n    security:\n      - apiKey: []\n      - supportedOauthFlows:\n        - streetlights:on\n        - streetlights:off\n        - streetlights:dim\n      - openIdConnectWellKnown: []\n  dummy-mqtt:\n    url: mqtt://localhost\n    protocol: mqtt\n    description: |\n      Private server\n\n      ```csharp\n      using System;\n\n      namespace HelloWorld\n      {\n        class Program\n        {\n          static void Main(string[] args)\n          {\n            Console.WriteLine(\"Hello World!\");    \n          }\n        }\n      }\n      ```\n    bindings:\n      mqtt:\n        clientId: guest        \n        cleanSession: false\n        keepAlive: 60\n        bindingVersion: 0.1.0\n        lastWill:\n          topic: smartylighting/streetlights/1/0/lastwill\n          qos: 1\n          message: so long and thanks for all the fish\n          retain: false\n  dummy-amqp:\n    url: amqp://localhost:{port}\n    protocol: amqp\n    description: dummy AMQP broker\n    protocolVersion: \"0.9.1\"\n    variables:\n      port:\n        enum:\n          - '15672'\n          - '5672'\n  dommy-kafka:\n    url: http://localhost:{port}\n    protocol: kafka\n    description: dummy Kafka broker\n    variables:\n      port:\n        default: '9092'\n\nchannels:\n  smartylighting/streetlights/1/0/event/{streetlightId}/lighting/measured:\n    x-security:\n      $ref: '#/components/securitySchemes/supportedOauthFlows/flows/clientCredentials'\n    description: The topic on which measured values may be produced and consumed.\n    parameters:\n      streetlightId:\n        $ref: '#/components/parameters/streetlightId'\n    servers:\n      - production\n      - dommy-kafka\n    subscribe:\n      summary: Receive information about environmental lighting conditions of a particular streetlight.\n      operationId: receiveLightMeasurement\n      externalDocs:\n        description: Find more info here\n        url: https://example.com\n      traits:\n        - $ref: '#/components/operationTraits/kafka'\n      message:\n        $ref: '#/components/messages/lightMeasured'\n      bindings:\n        mqtt:\n          qos: 1\n          bindingVersion: 0.1.0\n        http:\n          type: request\n          method: GET\n          query:\n            type: object\n            required:\n            - companyId\n            properties:\n              companyId:\n                type: number\n                minimum: 1\n                description: The Id of the company.\n            additionalProperties: false\n\n  smartylighting/streetlights/1/0/action/{streetlightId}/turn/on:\n    parameters:\n      streetlightId:\n        $ref: '#/components/parameters/streetlightId'\n    servers:\n      - production\n      - dummy-amqp\n    publish:\n      operationId: turnOn\n      security:\n        - supportedOauthFlows:\n          - streetlights:on\n      externalDocs:\n        description: Find more info here\n        url: https://example.com\n      traits:\n        - $ref: '#/components/operationTraits/kafka'\n      message:\n        $ref: '#/components/messages/turnOnOff'\n\n  smartylighting/streetlights/1/0/action/{streetlightId}/turn/off:\n    parameters:\n      streetlightId:\n        $ref: '#/components/parameters/streetlightId'\n    publish:\n      traits:\n        - $ref: '#/components/operationTraits/kafka'\n      message:\n        $ref: '#/components/messages/turnOnOff'\n\n  smartylighting/streetlights/1/0/action/{streetlightId}/dim:\n    parameters:\n      streetlightId:\n        $ref: '#/components/parameters/streetlightId'\n    servers:\n      - production\n      - dummy-amqp\n    publish:\n      operationId: dimLight\n      traits:\n        - $ref: '#/components/operationTraits/kafka'\n      message:\n        $ref: '#/components/messages/dimLight'\n\ncomponents:\n  messages:\n    lightMeasured:\n      messageId: lightMeasured Message ID\n      name: lightMeasured\n      title: Light measured\n      summary: Inform about environmental lighting conditions for a particular streetlight.\n      contentType: application/json\n      correlationId:\n        $ref: \"#/components/correlationIds/sentAtCorrelator\"\n      externalDocs:\n        url: \"https://www.asyncapi.com/\"\n      traits:\n        - $ref: '#/components/messageTraits/commonHeaders'\n      payload:\n        $ref: \"#/components/schemas/lightMeasuredPayload\"\n      bindings:\n        mqtt:\n          bindingVersion: 0.1.0\n      examples:\n        - headers:\n            my-app-header: 12\n          payload:\n            lumens: 1\n            sentAt: \"2020-01-31T13:24:53Z\"\n        - headers:\n            my-app-header: 13\n        - payload:\n            lumens: 3\n            sentAt: \"2020-10-31T13:24:53Z\"\n      x-schema-extensions-as-object:\n        type: object\n        properties:\n          prop1:\n            type: string\n          prop2:\n            type: integer\n            minimum: 0\n      x-schema-extensions-as-primitive: dummy\n      x-schema-extensions-as-array: \n        - \"item1\"\n        - \"item2\"\n    LwM2mOjbects:\n      payload:\n        type: object\n        properties:\n          objectLinks:\n            type: string\n        example:\n          objectLinks: \"lwm2m=1.1, </0/0>, </1/1>;ssid=1, </2>, </3/0>\"\n    turnOnOff:\n      name: turnOnOff\n      title: Turn on/off\n      summary: Command a particular streetlight to turn the lights on or off.\n      payload:\n        $ref: \"#/components/schemas/turnOnOffPayload\"\n      headers: \n        type: object\n        properties:\n          $ref: '#/components/schemas/streamHeaders'\n    dimLight:\n      name: dimLight\n      title: Dim light\n      summary: Command a particular streetlight to dim the lights.\n      correlationId:\n        $ref: \"#/components/correlationIds/sentAtCorrelator\"\n      externalDocs:\n        url: \"https://www.asyncapi.com/\"\n      tags:\n        - name: oparation-tag1\n          externalDocs:\n            description: External docs description 1\n            url: https://www.asyncapi.com/\n        - name: oparation-tag2\n          description: Description 2\n          externalDocs:\n            url: \"https://www.asyncapi.com/\"\n        - name: oparation-tag3\n        - name: oparation-tag4\n          description: Description 4\n        - name: oparation-tag5\n          externalDocs:\n            url: \"https://www.asyncapi.com/\"\n      traits:\n        - $ref: '#/components/messageTraits/commonHeaders'\n      payload:\n        $ref: \"#/components/schemas/dimLightPayload\"\n\n  schemas:\n    lightMeasuredPayload:\n      type: object\n      properties:\n        lumens:\n          type: integer\n          description: Light intensity measured in lumens.\n          writeOnly: true\n          oneOf: \n            - minimum: 0\n              maximum: 5\n            - minimum: 10\n              maximum: 20\n          externalDocs:\n            url: \"https://www.asyncapi.com/\"\n        sentAt:\n          $ref: \"#/components/schemas/sentAt\"\n        ifElseThen:\n          type: integer\n          minimum: 1\n          maximum: 1000\n          if:\n            minimum: 100\n          then: \n            multipleOf: 100\n          else:\n            if: \n              minimum: 10\n            then: \n              multipleOf: 10\n        dependencies:\n          $ref: \"#/components/schemas/dependenciesObject\"\n        anySchema: true\n        cannotBeDefined: false\n        restrictedAny: \n          minimum: 1\n          maximum: 1000\n      required:\n        - lumens\n      x-schema-extensions-as-object:\n        type: object\n        properties:\n          prop1:\n            type: string\n          prop2:\n            type: integer\n            minimum: 0\n      x-schema-extensions-as-primitive: dummy\n      x-schema-extensions-as-array: \n        - \"item1\"\n        - \"item2\"\n    turnOnOffPayload:\n      type: object\n      properties:\n        command:\n          type: string\n          enum:\n            - on\n            - off\n          description: Whether to turn on or off the light.\n        sentAt:\n          $ref: \"#/components/schemas/sentAt\"\n        arrayRank:\n          $ref: '#/components/schemas/arrayRank'\n      additionalProperties:\n        type: string\n\n    dimLightPayload:\n      type: object\n      properties:\n        percentage:\n          type: integer\n          description: Percentage to which the light should be dimmed to.\n          minimum: 0\n          maximum: 100\n          readOnly: true\n        sentAt:\n          $ref: \"#/components/schemas/sentAt\"\n        key:\n          type: integer\n          not:\n            minimum: 3\n      patternProperties:\n        ^S_:\n          type: string\n        ^I_:\n          type: integer\n      additionalProperties: false\n    sentAt:\n      type: string\n      format: date-time\n      description: Date and time when the message was sent.\n    union:\n      type: [string, number]\n    objectWithKey:\n      title: objectWithKey\n      type: object\n      propertyNames:\n        format: email\n      properties:\n        key:\n          type: string\n    objectWithKey2:\n      type: object\n      properties:\n        key2:\n          type: string\n          format: time\n    oneOfSchema:\n      oneOf:\n        - $ref: \"#/components/schemas/objectWithKey\"\n        - $ref: \"#/components/schemas/objectWithKey2\"\n    anyOfSchema:\n      anyOf:\n        - $ref: \"#/components/schemas/objectWithKey\"\n        - $ref: \"#/components/schemas/objectWithKey2\"\n    allOfSchema:\n      allOf:\n        - $ref: \"#/components/schemas/objectWithKey\"\n        - $ref: \"#/components/schemas/objectWithKey2\"\n    arrayContains: \n      type: array\n      contains:\n        type: integer\n    dependenciesObject:\n      type: object\n      properties:\n        name:\n          type: string\n        credit_card:\n          type: integer\n        billing_address:\n          type: string\n        schema_dependency:\n          type: string\n      required:\n        - name\n      dependencies:\n        credit_card:\n          properties:\n            billing_address:\n              type: string\n            billing_address2:\n              type: string\n          required:\n          - billing_address\n          dependencies:\n            billing_address2:\n              properties:\n                billing_address3:\n                  type: string\n              required:\n              - billing_address3    \n\n    subscriptionStatus:\n      type: object\n      oneOf:\n        - properties:\n            channelID:\n              type: integer\n              description: ChannelID on successful subscription, applicable to public messages only.\n            channelName:\n              type: string\n              description: Channel Name on successful subscription. For payloads 'ohlc' and 'book', respective interval or depth will be added as suffix.\n        - properties:\n            errorMessage:\n              type: string\n      properties:\n        event:\n          type: string\n          const: subscriptionStatus\n        subscription:\n          type: object\n          properties:\n            depth:\n              type: string\n            interval:\n              type: string\n          required:\n            - name\n      required:\n        - event\n\n    arrayRank:\n      type: object\n      properties:\n        valueRank: \n          $ref: '#/components/schemas/arrayValueRank'\n        arrayDimensions: \n          $ref: '#/components/schemas/arrayArrayDimensions'\n\n    arrayValueRank:\n      description: >\n        This Attribute indicates whether the val Attribute of the datapoint is an\n        array and how many dimensions the array has.\n      type: integer\n      default: -1\n      examples:\n        - 2\n      oneOf:\n        - const: -1\n          description: 'Scalar: The value is not an array.'\n        - const: 0\n          description: 'OneOrMoreDimensions: The value is an array with one or more dimensions.'\n        - const: 1\n          description: 'OneDimension: The value is an array with one dimension.'\n        - const: 2\n          description: 'The value is an array with two dimensions.'\n\n    arrayArrayDimensions:\n      type: array\n      items:\n        type: integer\n        minimum: 0\n      examples:\n        - [3, 5]\n\n    streamHeaders:\n      Etag:\n        type: string\n        description: |\n          The RFC7232 ETag header field in a response provides the current entity-\n          tag for the selected resource. An entity-tag is an opaque identifier for\n          different versions of a resource over time, regardless whether multiple\n          versions are valid at the same time. An entity-tag consists of an opaque\n          quoted string, possibly prefixed by a weakness indicator.\n        example: 411a\n      Cache-Control:\n        description: The Cache-Control HTTP header holds directives (instructions) for caching in request.\n        type: string\n        example: no-cache, no-store, must-revalidate\n\n  securitySchemes:\n    apiKey:\n      type: apiKey\n      in: user\n      description: Provide your API key as the user and leave the password empty.\n    supportedOauthFlows:\n      type: oauth2\n      description: Flows to support OAuth 2.0\n      flows:\n        implicit:\n          authorizationUrl: 'https://authserver.example/auth'\n          scopes:\n            'streetlights:on': Ability to switch lights on\n            'streetlights:off': Ability to switch lights off\n            'streetlights:dim': Ability to dim the lights\n        password:\n          tokenUrl: 'https://authserver.example/token'\n          scopes:\n            'streetlights:on': Ability to switch lights on\n            'streetlights:off': Ability to switch lights off\n            'streetlights:dim': Ability to dim the lights\n        clientCredentials:\n          tokenUrl: 'https://authserver.example/token'\n          scopes:\n            'streetlights:on': Ability to switch lights on\n            'streetlights:off': Ability to switch lights off\n            'streetlights:dim': Ability to dim the lights\n        authorizationCode:\n          authorizationUrl: 'https://authserver.example/auth'\n          tokenUrl: 'https://authserver.example/token'\n          refreshUrl: 'https://authserver.example/refresh'\n          scopes:\n            'streetlights:on': Ability to switch lights on\n            'streetlights:off': Ability to switch lights off\n            'streetlights:dim': Ability to dim the lights\n    openIdConnectWellKnown:\n      type: openIdConnect\n      openIdConnectUrl: 'https://authserver.example/.well-known'\n\n  parameters:\n    streetlightId:\n      description: The ID of the streetlight.\n      schema:\n        type: string\n      location: \"$message.payload#/user/id\"\n\n  correlationIds:\n    sentAtCorrelator:\n      description: Data from message payload used as correlation ID\n      location: $message.payload#/sentAt\n\n  messageTraits:\n    commonHeaders:\n      headers:\n        type: object\n        properties:\n          my-app-header:\n            type: integer\n            minimum: 0\n            maximum: 100\n        required:\n          - my-app-header\n  \n  operationTraits:\n    kafka:\n      bindings:\n        kafka:\n          clientId: my-app-id\n",config:z,schemaFromExternalResource:"",refreshing:!1},this.updateSchema=n=>{this.setState({schema:n})},this.updateSchemaFromExternalResource=n=>{this.setState({schemaFromExternalResource:n})},this.updateConfig=n=>{this.setState({config:n})},this.startRefreshing=()=>{setTimeout(()=>{this.setState({refreshing:!0})},500)},this.stopRefreshing=()=>{this.setState({refreshing:!1})},this.updateSchemaFn=Z(this.updateSchema,750,this.startRefreshing,this.stopRefreshing),this.updateConfigFn=Z(this.updateConfig,750,this.startRefreshing,this.stopRefreshing)}}var H=K}},function(n){n.O(0,[120,348,367,124,741,472,115,69,744],function(){return n(n.s=8813)}),_N_E=n.O()}]);